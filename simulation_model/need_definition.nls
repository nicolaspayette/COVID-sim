;;See Maslow structure for further indication (the first lines are "strong" override while others are more fuzzy and culturally-sensitive)
;;survival needs differ from safety in that they are related to the urgency of physiological risk where safety is rather a matter of general anxiety


;;I set food safety need satisfaction with a "min" operator as it tends to override other needs
;;risk avoidance might be a second option. Though, risk-compliance makes it for a poor proxy; as "safety = risk-avoidance"
;;a more specific concept would be appropriate (e.g. "contagion-safety" for instance, I let you adapt depending on what you want to represent with this variable).
to-report safety-need-satisfaction
  let physiological-needs (list food-safety-need-satisfaction)
  let importances-physiological-needs (list my-importance-for-food-safety-needs)
  
  let psychological-needs (list compliance-need-satisfaction risk-avoidance-need-satisfaction)
  let importances-psychological-needs (list my-importance-for-compliance-needs my-importance-for-risk-avoidance-needs)
  
  if age != "young" [ ; The young te taken care of by their parents, so do not worry about finances
    set physiological-needs fput financial-survival-need-satisfaction physiological-needs
    set importances-physiological-needs fput my-importance-for-financial-survival-needs importances-physiological-needs
    
    set psychological-needs fput financial-safety-need-satisfaction psychological-needs
    set importances-psychological-needs fput my-importance-for-financial-safety-needs importances-psychological-needs
  ]
  report 
  min (list 
    min physiological-needs
    weighted-mean psychological-needs importances-psychological-needs
    )
end

to-report self-esteem-need-satisfaction
  let needs (list relaxing-need-satisfaction)
  let importances (list my-importance-for-relaxing-needs)
  if is-young? [
    set needs fput luxury-need-satisfaction needs
    set importances fput my-importance-for-luxury-needs importances
  ]
  report weighted-mean needs importances
end

;;to be updated later on:

to-report survival-need-satisfaction
  ;;constant value set to average
  ;;survival needs often revolve around short-term temporality (e.g. stopping to breath)
  if is-believing-to-be-infected?
  [
    if not (is-resting-at-home? or is-currently-allocated-a-bed-in-hospital?) [report 0]
    if is-observing-critical-symptoms? and (is-resting-at-home? or is-currently-allocated-a-bed-in-hospital?) [report 0.1]
    
    if is-resting-at-home? or is-currently-allocated-a-bed-in-hospital? [report 0.3]
    error "undefined"
  ]
  
  report 1
end

to-report expected-undiscounted-survival-needs-satisfaction-increase-for-playing [ad]
  report expected-undiscounted-healthcare-need-satisfaction ad
end

to-report expected-undiscounted-healthcare-need-satisfaction [ad]
  
  ifelse is-believing-to-be-infected? or has-internally-visible-symptoms?
  [
    if is-observing-critical-symptoms? [
      if is-get-healed-to-hospital-descriptor? ad and (is-currently-allocated-a-bed-in-hospital? or any-free-bed-in-hospital?)
      [report .8]
      report 0
    ]
    
    if is-get-healed-to-hospital-descriptor? ad and (is-currently-allocated-a-bed-in-hospital? or any-free-bed-in-hospital?)
    [
      report .3
    ]
    if is-rest-at-home-descriptor? ad
    [ report 0.2 ]
    report 0
  ]
  ;;can be updated if agents start to be deprived from sleep, not needed at the moment
  [report 1]
end

;;here, food-safety is rather a subaspect of safety (more cognitive, worries about the future)
;;TBU: should be dependent on the current plan, i.e. acquiring food should be expected to lower this need
to-report food-safety-need-satisfaction
  if is-currently-being-treated-at-hospital? [
    report 1
  ]
  report min (list ([available-food-rations] of my-home / amount-of-rations-I-buy-when-going-to-essential-shops) 1)
end


to-report financial-survival-need-satisfaction
  report clamp 0 1 (my-amount-of-capital / price-of-rations-in-essential-shops * amount-of-rations-I-buy-when-going-to-essential-shops)
end

to-report financial-safety-need-satisfaction
  report ifelse-value my-previous-amount-of-capital > 0 [clamp 0 1 (my-amount-of-capital / my-previous-amount-of-capital)] [0]
end

to-report expected-undiscounted-safety-needs-satisfaction-increase-for-playing [ad]
  report weighted-mean (list 
    (expected-undiscounted-compliance-needs-satisfaction-increase-for-playing ad) 
    (expected-undiscounted-survival-needs-satisfaction-increase-for-playing ad) ;;this line is very strange. Shouldn't it be financial-survival, here?
    (expected-undiscounted-risk-avoidance-needs-satisfaction-increase-for-playing ad)
  ) 
  (list my-importance-for-compliance-needs my-importance-for-survival-needs my-importance-for-risk-avoidance-needs)
end

to-report expected-undiscounted-financial-survival-needs-satisfaction-increase-for-playing [ad]
  let gp first ad
  let motive last ad
  let eating-costs price-of-rations * amount-of-rations-I-buy-when-going-to-essential-shops

  if is-I-have-contractual-obligations? [
    if gp = my-work [
      report min (list (my-expected-income / eating-costs) 1)
    ]
    report max (list ((- my-expected-income) / eating-costs) 0)
  ]
  if motive = "essential shopping" [
    report (- min (list ((my-amount-of-capital - eating-costs) / eating-costs) 1))
  ]
  if motive = "shopping" [
    report (- min (list ((my-amount-of-capital - amount-of-rations-I-buy-when-going-to-shops * price-of-rations) / eating-costs) 1))
  ]
  report 0
end

to-report expected-undiscounted-financial-safety-needs-satisfaction-increase-for-playing [ad]
  let gp first ad
  let motive last ad
  let eating-costs price-of-rations * amount-of-rations-I-buy-when-going-to-essential-shops

  if is-I-have-contractual-obligations? and gp = my-work [
    if my-previous-amount-of-capital > 0 
    [report clamp 0 1 my-expected-income / my-previous-amount-of-capital]
    report 1
  ]
  if my-previous-amount-of-capital <= 0 [
    report -1
  ]
  if motive = "essential shopping" [
    report (- (eating-costs / my-previous-amount-of-capital))
  ]
  if motive = "shopping" [
    report (- (amount-of-rations-I-buy-when-going-to-shops * price-of-rations / my-previous-amount-of-capital))
  ]
  report 0
end