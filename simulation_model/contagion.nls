to spread-contagion  
  spread-by-activity-proximity
end

to spread-by-activity-proximity
  ask people [
    if is-away? [apply-risk-of-contamination-when-away]
    apply-risk-of-contamination-when-travelling
    
    let number-contamination count (other [link-neighbors] of current-activity) with [current-activity = [current-activity] of myself and is-contagious?]
    repeat number-contamination [ apply-risk-of-contamination [proximity-factor] of current-activity * contextual-contagion-modificators]
  ]
end

to-report contextual-contagion-modificators
  report 
  age-infection-risk-mitigation-factor
  * social-distancing-risk-mitigation-factor
end

to-report social-distancing-risk-mitigation-factor
  ifelse is-I-apply-social-distancing? [report probably-contagion-mitigation-from-social-distancing]
  [report 1]
end

to-report is-I-apply-social-distancing?
  report is-social-distancing-measure-active?
end

to apply-risk-of-contamination-when-travelling
  if density-travelling-propagation2 = 0 [stop]
  if not is-moving-outside-for-reaching-current-activity? [stop]
  
  let travellers people with [is-moving-outside-for-reaching-current-activity?]
  let #contagious count travellers with [is-contagious?]
   
  let ratio-contagious #contagious / count people
  
  ;;these are "intuitive maths", to be confirmed if relevant
  ;;the squared root represents the risk of two people picking the same item when each pick n items on a n*n space (x*x -> n * 1)
  ;;it could be cubic if the people we would consider a 3D space (or time)
  let number-encounters sqrt count travellers
  
  let probability-avoiding-all-contagious (1 - ratio-contagious) ^ number-encounters
  let probability-getting-sick 1 - probability-avoiding-all-contagious
  
 ; show (sentence count travellers with [is-contagious?] "/" ratio-contagious "#contacts" number-encounters "avoid all:" probability-avoiding-all-contagious "sick?" probability-getting-sick)
  
  ;;could be fastened with a bit of math, like 1-(1-p)^k
  let was-sick? is-infected?
  apply-risk-of-contamination probability-getting-sick * density-travelling-propagation2 * contextual-contagion-modificators
  if not was-sick? and is-infected? [set #who-became-sick-while-travelling-locally #who-became-sick-while-travelling-locally + 1]
end

to-report age-infection-risk-mitigation-factor
  report ifelse-value is-young? [factor-reduction-probability-transmission-young] [1]
end

to apply-risk-of-contamination-when-away
  if random-float 1 < probability-infection-when-abroad * contextual-contagion-modificators and infection-status = "healthy"
  [
    set-contaminated
  ]
end

to set-contaminated
  set infection-status "asymptomatic noncontagious" 
  set duration-current-disease-status infection-to-asymptomatic-contagiousness
end

to apply-risk-of-contamination [factor]
  let contagion-occurs? false
  if (not is-away? and random-float 1 < factor * propagation-risk and infection-status = "healthy")
  [set contagion-occurs? true]
  
  if contagion-occurs?
  [
    set-contaminated
  ]
end

to-report is-contagious?
  report not (infection-status = "healthy") and not (infection-status = "immune")
end

to-report is-alive?
  report not (infection-status = "dead")
end

to infect-one-random-person
    ask n-of (min list 3 count people) people [
    set-infection-status "infected-asymptomatic"  set duration-current-disease-status infection-to-asymptomatic-contagiousness
  ]
end

